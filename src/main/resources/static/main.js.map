{"version":3,"sources":["./src/environments/environment.ts","./src/app/tasks/tasks-list/tasks-list.component.ts","./src/app/tasks/tasks-list/tasks-list.component.html","./src/app/tasks/task.model.ts","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/tasks/tasks-add/tasks-add.component.ts","./src/app/tasks/tasks-add/tasks-add.component.html","./src/app/tasks/task.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit, Output, EventEmitter} from '@angular/core';\nimport {Task} from \"../task.model\";\n\n@Component({\n  selector: 'app-tasks-list',\n  templateUrl: './tasks-list.component.html',\n  styleUrls: ['./tasks-list.component.scss']\n})\nexport class TasksListComponent implements OnInit {\n\n  @Input() public tasks: Task[] = [];\n  @Output() onTaskChange = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    // this.tasks.push(new Task(1, \"Task 1\", true, \"07/08/21\"))\n    // this.tasks.push(new Task(2, \"Task 2\", false, \"07/08/21\"))\n    // this.tasks.push(new Task(3, \"Task 3\", false, \"07/08/21\"))\n  }\n\n  getDueDateLabel(task: Task) {\n    return task.completed ? \"badge badge-success\" : \"badge badge-primary\";\n  }\n\n  onTaskChanged(event, task: Task) {\n    let aux = {...task}\n    aux.completed = event.target.checked;\n    this.onTaskChange.emit(aux)\n  }\n}\n","<ul class=\"list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let task of tasks\">\n    <div class=\"form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" (change)=\"onTaskChanged($event, task)\" [checked]=\"task.completed\">\n      <span [ngClass]=\"{'name form-check-label': true, 'completed': task.completed}\">{{ task.name }}</span>\n      <span class=\"{{ getDueDateLabel(task) }} float-right\">{{ task.dueDate }}</span>\n    </div>\n  </li>\n</ul>\n","export class Task {\r\n  public id: number;\r\n  public name: string;\r\n  public completed: boolean;\r\n  public dueDate: string;\r\n\r\n  constructor(name: string, completed: boolean, dueDate: string) {\r\n    this.name = name;\r\n    this.completed = completed;\r\n    this.dueDate = dueDate;\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {TaskService} from \"./task.service\";\nimport {Task} from \"./task.model\";\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n\n  public tasks = [];\n\n  constructor(private taskService: TaskService) {\n  }\n\n  ngOnInit(): void {\n    this.initializeTaskList();\n  }\n\n  initializeTaskList() {\n    this.taskService.getTasks().subscribe((tasks: any[]) => this.tasks = tasks, error => {\n      this.tasks = [];\n      console.log(\"Não foi possivel obter a lista de tasks através do servidor.\")\n    })\n  }\n\n  updateTask(task: Task) {\n    this.taskService.saveTask(task).subscribe(response => {\n      const index = this.getTaskIndex(task.id);\n      if (index) {\n        this.tasks[index] = task;\n        console.log(`a task ${response.id} foi alterada, novo valor: `, response)\n      }\n    });\n  }\n\n  addTask(event) {\n    this.taskService.saveTask(event.newValue).subscribe((response: Task) => {\n      this.tasks.push(response);\n      console.log(`Uma nova task foi adicionada`);\n      event.callback();\n    });\n  }\n\n  getTaskIndex(taskId): number {\n    const found = this.tasks.find((it: Task) => it.id === taskId)\n    return found !== -1 ? this.tasks.indexOf(found) : null;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-2\">&nbsp;</div>\n  <div class=\"col-md-8\">\n    <div id=\"tasksPanel\" class=\"card card-default\">\n      <div class=\"card-header\">\n        <h3 class=\"card-title\">Angular 4 Java Developers Tasks</h3>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <app-tasks-add (onTaskAdd)=\"addTask($event)\"></app-tasks-add>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <app-tasks-list [tasks]=\"tasks\" (onTaskChange)=\"updateTask($event)\"></app-tasks-list>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-2\">&nbsp;</div>\n</div>\n","import {Component, OnInit, Output, EventEmitter, Input} from '@angular/core';\nimport {Task} from \"../task.model\";\n\n@Component({\n  selector: 'app-tasks-add',\n  templateUrl: './tasks-add.component.html',\n  styleUrls: ['./tasks-add.component.scss']\n})\nexport class TasksAddComponent implements OnInit {\n\n  @Output() onTaskAdd = new EventEmitter();\n\n  taskName = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onTaskAdded(event) {\n    this.taskName = '';\n    this.onTaskAdd.emit({\n      newValue: new Task(event.target.value, false, this.getTodayAsString()),\n      callBack: this.clearTaskName.bind(this)\n    })\n  }\n\n  clearTaskName() {\n    this.taskName = '';\n  }\n\n  getTodayAsString() {\n    const date = new Date();\n    return date.toLocaleDateString();\n  }\n\n}\n","<div class=\"form-group\">\n  <input type=\"text\" class=\"form-control\" placeholder=\"Add New Task\" (keyup.enter)=\"onTaskAdded($event)\"\n         [(ngModel)]=\"taskName\">\n</div>\n","import {Injectable} from \"@angular/core\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Task} from \"./task.model\";\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getTasks(): Observable<any> {\r\n    return this.http.get<any>('/api/tasks');\r\n  }\r\n\r\n  saveTask(task: Task): Observable<any> {\r\n    return this.http.post('/api/tasks/save', task);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<div class=\"container\">\n  <app-tasks></app-tasks>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {TasksComponent} from './tasks/tasks.component';\nimport {TasksAddComponent} from './tasks/tasks-add/tasks-add.component';\nimport {TasksListComponent} from './tasks/tasks-list/tasks-list.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {TaskService} from \"./tasks/task.service\";\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent,\n    TasksAddComponent,\n    TasksListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [TaskService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}